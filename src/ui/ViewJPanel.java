/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Application;
import model.Observation;
import model.VitalSignHistory;

/**
 *
 * @author shalomdaniel
 */
public class ViewJPanel extends javax.swing.JPanel {

    private Application application;
    DefaultTableModel viewtablemodel;
    Observation selectedObservation;

    /**
     * Creates new form ViewJPanel
     */
    public ViewJPanel() {
        initComponents();
    }

    ViewJPanel(Application application) {
        initComponents();
        
        this.application = application;
        this.viewtablemodel = (DefaultTableModel) obsTable.getModel();
        
        displayObservations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldObservationTemp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldObservationID1 = new javax.swing.JTextField();
        fieldObservationBP1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        UpdateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsTable = new javax.swing.JTable();
        viewObsBtn = new javax.swing.JButton();

        fieldObservationTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldObservationTempActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        jLabel3.setText("Blood Pressure");

        fieldObservationID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldObservationID1ActionPerformed(evt);
            }
        });

        fieldObservationBP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldObservationBP1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Temperature");

        UpdateBtn.setText("Update Observation");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        obsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Temperature", "Blood Pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(obsTable);

        viewObsBtn.setText("View Details ");
        viewObsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UpdateBtn)
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fieldObservationBP1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldObservationTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel2)
                                .addGap(79, 79, 79)
                                .addComponent(fieldObservationID1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewObsBtn)
                .addGap(203, 203, 203))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldObservationID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldObservationBP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldObservationTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateBtn)
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(viewObsBtn)
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void displayObservations(){
        VitalSignHistory history = this.application.getHistory();
        
        if(history.getVitalSignHistory().size() > 0){
            
            viewtablemodel.setRowCount(0);
            for(Observation o : history.getVitalSignHistory()){
                
                Object row[] = new Object[3];
                row[0] = o;
                row[1] = o.getTemperature();
                row[2] = o.getBloodPressure();
                
                viewtablemodel.addRow(row);
                
            }
        }
        else{
            System.out.println("Empty List");
        }
        
    }
    
    
    private void fieldObservationTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldObservationTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldObservationTempActionPerformed

    private void fieldObservationID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldObservationID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldObservationID1ActionPerformed

    private void fieldObservationBP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldObservationBP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldObservationBP1ActionPerformed

    private void viewObsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObsBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = obsTable.getSelectedRow();
        
        if(selectedRow >= 0){
            this.selectedObservation = (Observation) obsTable.getValueAt(selectedRow, 0);
            
            fieldObservationID1.setText(String.valueOf(this.selectedObservation.getObservationId()));
            fieldObservationBP1.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            fieldObservationTemp.setText(String.valueOf(this.selectedObservation.getTemperature()));
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!");
        }
        
    }//GEN-LAST:event_viewObsBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
        
        if(!fieldObservationID1.getText().isEmpty()){
        
//            Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObservationID1.getText()));
//            o.setBloodPressure(Double.valueOf(fieldObservationBP1.getText()));
//            o.setTemperature(Double.valueOf(fieldObservationTemp.getText()));       

            this.selectedObservation.setBloodPressure(Double.valueOf(fieldObservationBP1.getText()));
            this.selectedObservation.setTemperature(Double.valueOf(fieldObservationTemp.getText()));           
        }
        else{
            JOptionPane.showMessageDialog(null, "No selection made!");
        }
        
        displayObservations();
        
    }//GEN-LAST:event_UpdateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JTextField fieldObservationBP1;
    private javax.swing.JTextField fieldObservationID1;
    private javax.swing.JTextField fieldObservationTemp;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable obsTable;
    private javax.swing.JButton viewObsBtn;
    // End of variables declaration//GEN-END:variables

}
